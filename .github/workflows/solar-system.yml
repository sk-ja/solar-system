name: Solar System Workflow

on: 
  workflow_dispatch:
  push:
    branches:
      - master
      - 'feature/*'
    
env:
  MONGO_URI: mongodb+srv://supercluster.d83jj.mongodb.net/superData
  MONGO_USERNAME: superuser
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
  


jobs:
    unit-testing:
        continue-on-error: true
        name: Unit Testing
        runs-on: self-hosted
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version
          uses: actions/setup-node@v4
          with:
            node-version: 20
    
        - name: Cache Dependencies
          uses: actions/cache@v4
          with:
            path: node_modules
            key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
        
        - name: Install Dependencies
          run: npm install

        - name: Unit Testing
          id: unit-test
          continue-on-error: true
          run: npm test
          
        - name: Archive Test Result
          if: always()
          uses: actions/upload-artifact@v4
          with:
            name: Mocha-Test-Result
            path: test-results.xml
          
    code-coverage:
      name: Code Coverage
      continue-on-error: true
      runs-on: self-hosted
      steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup NodeJS Version
        uses: actions/setup-node@v4
        with:
          node-version: 20
      
      - name: Install Dependencies
        run: npm install
        
      - name: Code Coverage
        continue-on-error: true
        run: npm run coverage
      - name: Archive Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: Code-Coverage-result
          path: coverage
          retention-days: 5

    docker:
      needs: [unit-testing, code-coverage]
      name: Containerization
      runs-on: self-hosted
      steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
  