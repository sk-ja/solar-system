name: reusable Deployment Workflow


on:
    workflow_call:
        secrets: 
            k8s-cubeconfig:
                required: true
            mongodb-password:
                required: true
jobs:
    reuse-deploy:
        environment:
          name: development
          url: https://${{ steps.set-ingress-host-address.outputs.APP_INGRESS_HOST }}
        runs-on: self-hosted
        outputs:
            APP_INGRESS_URL: ${{ steps.set-ingress-host-address.outputs.APP_INGRESS_HOST }}
        steps:
        - name: Checkout Repo
          uses: actions/checkout@v4

        - name: Install kubectl
          uses: azure/setup-kubectl@v4
          with:
            version: v1.29.0

        - name: Set Kubernetes Context
          uses: azure/k8s-set-context@v4
          with:
            method: kubeconfig
            kubeconfig: ${{ secrets.KUBECONFIG }}

        - name: Fetch kubectl version
          run: |
            kubectl version
            echo -----------------
            kubectl get nodes
        

        # - name: Save Nginx Ingress controller IP as GITHUB Environment Variable       #not really needed if on-prem or if you don't use public IP. 
        #   run: |
        #     echo "INGRESS_IP=$(kubectl get svc -n ingress-nginx ingress-nginx-controller -o jsonpath='{.status.loadBalancer.ingress[0].ip}')" >> $GITHUB_ENV
        
        - name: replace tokens in manifest files
          uses: cschleiden/replace-tokens@v1
          with:
            tokenPrefix: '_{_'
            tokenSuffix: '_}_'
            files: '["kubernetes/development/*.yaml"]'
          env:
            NAMESPACE: ${{ vars.NAMESPACE }}
            REPLICAS: ${{ vars.REPLICAS }}
            IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}
        
        - name: Check if tokens replaced successfully
          run: |
            cat kubernetes/development/*.yaml

        - name: Create MongoDB secret
          run: |
            kubectl -n ${{ vars.NAMESPACE }} create secret generic mongo-db-creds \
            --from-literal=MONGO_URI=${{ env.MONGO_URI }} \
            --from-literal=MONGO_USERNAME=${{ env.MONGO_USERNAME }} \
            --from-literal=MONGO_PASSWORD=${{ secrets.MONGO_PASSWORD }} \
            --save-config \
            --dry-run=client -o yaml | kubectl apply -f -

        - name: Deploy to Kubernetes
          run: |
            kubectl apply -f kubernetes/development

        - name: Set app ingress host address
          id: set-ingress-host-address
          run: |
            echo "APP_INGRESS_HOST=$(kubectl -n ${{ vars.NAMESPACE }} get ingress -o jsonpath="{.items[0].spec.tls[0].hosts[0]}")" >> "$GITHUB_OUTPUT"
